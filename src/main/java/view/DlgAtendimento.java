/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.AgendaDao;
import dao.AtendimentoDao;
import dao.PetDao;
import entities.Agenda;
import entities.Atendimento;
import entities.Pet;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import lombok.extern.log4j.Log4j2;
import org.hibernate.SessionFactory;
import utils.HibernateUtil;
import utils.VisualsConfig;

@Log4j2
public class DlgAtendimento extends javax.swing.JDialog {

    private final SessionFactory sessionFactory;
    private Optional<Pet> pet;
    private Atendimento atendimento;
    private Agenda agenda;
    private AtendimentoDao atendimentoDao;
    private List<Atendimento> atendimentosSemFiltroLista;
    private List<Atendimento> atendimentosComFiltroLista;
    private int idAtendimento;
    private int agendaID;
    private int funcID;

    /**
     * Creates new form DlgAtendimento
     */
    public DlgAtendimento(java.awt.Frame parent, boolean modal, int agendaID, int funcID) {
        super(parent, modal);
        initComponents();

        this.sessionFactory = HibernateUtil.getSessionFactory();

        VisualsConfig.setPropsToWindow(this, "Atendimentos", parent);

        this.idAtendimento = 0;
        this.funcID = funcID;
        this.agendaID = agendaID;
        this.atendimento = new Atendimento();
        this.atendimentoDao = new AtendimentoDao(sessionFactory);
        this.atendimentosSemFiltroLista = new ArrayList<>();
        this.atendimentosComFiltroLista = new ArrayList<>();

        this.pet = Optional.empty();
        this.agenda = new AgendaDao(sessionFactory).buscar(agendaID).get();

        String[] dataArray = agenda.getData().toString().split("-");

        ftfDataAtendCriar.setText(dataArray[2] + "/" + dataArray[1] + "/" + dataArray[0]);

        ftfHorarioAtend.setToolTipText("O horário do atendimento deve ser entre "
                + agenda.getHorario_inicio().toString() + "h e " + agenda.getHorario_final() + "h.");

        try {
            List<Atendimento> todosAtendimentos = atendimentoDao.buscarTodos();

            if (!todosAtendimentos.isEmpty()) {
                for (Atendimento atd : todosAtendimentos) {
                    if (atd.getAgenda().getId() == agendaID
                            && atd.getAgenda().getFuncionario().getId() == funcID) {
                        atendimentosSemFiltroLista.add(atd);
                    }
                }
            }
            atualizarTabelaAtendimento(atendimentosSemFiltroLista);
        } catch (Exception e) {
            log.error("Erro ao buscar todos atendimentos: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Erro ao buscar todos atendimentos: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAtendimento = new javax.swing.JPanel();
        pnlCadastroAtend = new javax.swing.JPanel();
        btnCriarAtendimento = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ftfDataAtendCriar = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaObserv = new javax.swing.JTextArea();
        ftfHorarioAtend = new javax.swing.JFormattedTextField();
        pnlBuscaAtend = new javax.swing.JPanel();
        btnEditarAtend = new javax.swing.JButton();
        btnExcluirAtend = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        btnFiltrarAtendimento = new javax.swing.JButton();
        ftfDataAtendFiltro = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAtend = new javax.swing.JTable();
        btnVerInfos = new javax.swing.JButton();
        btnLimparAtend = new javax.swing.JButton();
        txfPet = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnBuscarPetAtend = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlCadastroAtend.setBorder(javax.swing.BorderFactory.createTitledBorder("Novo Atendimento"));

        btnCriarAtendimento.setText("Criar");
        btnCriarAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarAtendimentoActionPerformed(evt);
            }
        });

        jLabel2.setText("Horário:");

        jLabel9.setText("Data:");

        ftfDataAtendCriar.setEditable(false);
        try {
            ftfDataAtendCriar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel12.setText("Observações:");

        txaObserv.setColumns(20);
        txaObserv.setRows(5);
        jScrollPane3.setViewportView(txaObserv);

        try {
            ftfHorarioAtend.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout pnlCadastroAtendLayout = new javax.swing.GroupLayout(pnlCadastroAtend);
        pnlCadastroAtend.setLayout(pnlCadastroAtendLayout);
        pnlCadastroAtendLayout.setHorizontalGroup(
            pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCadastroAtendLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCriarAtendimento)
                    .addGroup(pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlCadastroAtendLayout.createSequentialGroup()
                            .addGroup(pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel9)
                                .addComponent(jLabel2))
                            .addGap(18, 18, 18)
                            .addGroup(pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(ftfDataAtendCriar, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                                .addComponent(ftfHorarioAtend)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        pnlCadastroAtendLayout.setVerticalGroup(
            pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCadastroAtendLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ftfDataAtendCriar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCadastroAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ftfHorarioAtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCriarAtendimento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBuscaAtend.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar Atendimentos"));

        btnEditarAtend.setText("Editar");

        btnExcluirAtend.setText("Excluir");

        jLabel11.setText("Filtrar por data:");

        btnFiltrarAtendimento.setText("Filtrar");
        btnFiltrarAtendimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarAtendimentoActionPerformed(evt);
            }
        });

        try {
            ftfDataAtendFiltro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 250));

        tblAtend.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Horário", "Data", "Pet"
            }
        ));
        jScrollPane2.setViewportView(tblAtend);
        if (tblAtend.getColumnModel().getColumnCount() > 0) {
            tblAtend.getColumnModel().getColumn(0).setMinWidth(50);
            tblAtend.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblAtend.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        btnVerInfos.setText("Ver infos");

        btnLimparAtend.setText("Limpar");
        btnLimparAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparAtendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBuscaAtendLayout = new javax.swing.GroupLayout(pnlBuscaAtend);
        pnlBuscaAtend.setLayout(pnlBuscaAtendLayout);
        pnlBuscaAtendLayout.setHorizontalGroup(
            pnlBuscaAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBuscaAtendLayout.createSequentialGroup()
                .addGroup(pnlBuscaAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBuscaAtendLayout.createSequentialGroup()
                        .addContainerGap(20, Short.MAX_VALUE)
                        .addGroup(pnlBuscaAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlBuscaAtendLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(ftfDataAtendFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnFiltrarAtendimento, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscaAtendLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlBuscaAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscaAtendLayout.createSequentialGroup()
                                .addComponent(btnVerInfos)
                                .addGap(18, 18, 18)
                                .addComponent(btnEditarAtend)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluirAtend))
                            .addComponent(btnLimparAtend, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6))
        );
        pnlBuscaAtendLayout.setVerticalGroup(
            pnlBuscaAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBuscaAtendLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBuscaAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(btnFiltrarAtendimento)
                    .addComponent(ftfDataAtendFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnLimparAtend)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlBuscaAtendLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditarAtend)
                    .addComponent(btnExcluirAtend)
                    .addComponent(btnVerInfos))
                .addGap(18, 18, 18))
        );

        txfPet.setEditable(false);

        jLabel10.setText("Pet:");

        btnBuscarPetAtend.setText("Buscar Pet");
        btnBuscarPetAtend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPetAtendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAtendimentoLayout = new javax.swing.GroupLayout(pnlAtendimento);
        pnlAtendimento.setLayout(pnlAtendimentoLayout);
        pnlAtendimentoLayout.setHorizontalGroup(
            pnlAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAtendimentoLayout.createSequentialGroup()
                .addGroup(pnlAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAtendimentoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlCadastroAtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAtendimentoLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addGroup(pnlAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBuscarPetAtend, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(txfPet))))
                .addGap(18, 18, 18)
                .addComponent(pnlBuscaAtend, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );
        pnlAtendimentoLayout.setVerticalGroup(
            pnlAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAtendimentoLayout.createSequentialGroup()
                .addGroup(pnlAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAtendimentoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlBuscaAtend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlAtendimentoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnlAtendimentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txfPet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarPetAtend)
                        .addGap(18, 18, 18)
                        .addComponent(pnlCadastroAtend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 930, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 507, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlAtendimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limparAtendimento() {
        this.idAtendimento = 0;
        this.atendimento = new Atendimento();
        this.pet = Optional.empty();
        LocalDate dataAtual = LocalDate.now();
        ftfHorarioAtend.setText("");
        txfPet.setText("");
        txaObserv.setText("");
        ftfHorarioAtend.setToolTipText("");
        tblAtend.removeAll();

        try {
            List<Atendimento> todosAtendimentos = atendimentoDao.buscarTodos();

            if (!todosAtendimentos.isEmpty()) {
                for (Atendimento atd : todosAtendimentos) {
                    if (atd.getAgenda().getId() == agendaID
                            && atd.getAgenda().getFuncionario().getId() == funcID) {
                        atendimentosSemFiltroLista.add(atd);
                    }
                }
            }
            atualizarTabelaAtendimento(atendimentosSemFiltroLista);

        } catch (Exception e) {
            log.error("Erro ao buscar todos atendimentos: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Erro ao buscar todos atendimentos: " + e.getMessage());
        }
    }

    public void atualizarTabelaAtendimento(List<Atendimento> lista) {
        try {
            Object[] cabecalho = {"ID", "Horário", "Pet"};
            Object[][] dadosTabela = new Object[lista.size()][3];
            if (lista.size() > 0) {
                for (int i = 0; i < lista.size(); i++) {
                    dadosTabela[i][0] = lista.get(i).getId();
                    dadosTabela[i][1] = lista.get(i).getHora();
                    dadosTabela[i][2] = lista.get(i).getPet().getNome();
                }
            }

            tblAtend.setModel(new DefaultTableModel(dadosTabela, cabecalho) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            });

            tblAtend.setSelectionMode(0);

            // redimensiona as colunas de uma tabela
            TableColumn column = null;
            for (int i = 0; i < tblAtend.getColumnCount(); i++) {
                column = tblAtend.getColumnModel().getColumn(i);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                column.setCellRenderer(centerRenderer);
            }

            column = tblAtend.getColumnModel().getColumn(0);
            column.setPreferredWidth(50);
            column.setMaxWidth(50);
            column.setMinWidth(50);
        } catch (Exception e) {
            log.error("Erro ao buscar na tabela de atendimentos: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Erro ao buscar na tabela de atendimentos: " + e.getMessage());
        }
    }

    private void btnCriarAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarAtendimentoActionPerformed
        try {
            if (pet.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione um Pet.");
                return;
            }

            if (ftfHorarioAtend.getText().equals("  :  ")) {
                JOptionPane.showMessageDialog(null, "Preencha o horário do atendimento!");
                return;
            }

            // horario atend
            String horarioString = ftfHorarioAtend.getText();
            String[] horarioArray = horarioString.split(":");
            LocalTime horarioParse = LocalTime.of(
                    Integer.parseInt(horarioArray[0]),
                    Integer.parseInt(horarioArray[1])
            );

            if (horarioParse.isAfter(agenda.getHorario_final())
                    || horarioParse.isBefore(agenda.getHorario_inicio())) {
                JOptionPane.showMessageDialog(null, "O horário do atendimento deve ser entre "
                        + agenda.getHorario_inicio().toString() + "h e " + agenda.getHorario_final() + "h.");
                return;
            }

            boolean atendimentoExiste = false;
            if (idAtendimento == 0) {
                for (Atendimento atd : atendimentosSemFiltroLista) {
                    if (atd.getHora().equals(horarioParse)
                            && atd.getAgenda().getId() == agenda.getId()) {
                        atendimentoExiste = true;
                    }
                }
            }

            if (atendimentoExiste) {
                JOptionPane.showMessageDialog(null, "Um atendimento já está marcado neste horário!");
                return;
            }

            idAtendimento = atendimento.getId();
            atendimento.setAgenda(agenda);
            atendimento.setHora(horarioParse);
            atendimento.setObservacoes(txaObserv.getText());
            atendimento.setPet(pet.get());
            atendimento.setStatus("ativo");

            Optional<Atendimento> atendimento0 = Optional.empty();

            if (idAtendimento == 0) {
                atendimento0 = atendimentoDao.salvar(atendimento);
                atendimentosSemFiltroLista.add(atendimento);
            } else {
                atendimento0 = atendimentoDao.atualizar(atendimento);
            }

            if (atendimento0.isPresent()) {
                if (idAtendimento == 0) {
                    JOptionPane.showMessageDialog(null, "Atendimento cadastrado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(null, "Atendimento atualizado com sucesso!");
                }
            }

            this.limparAtendimento();
        } catch (Exception e) {
            log.error("Erro ao cadastrar atendimento: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Erro ao cadastrar atendimento.");
        }
    }//GEN-LAST:event_btnCriarAtendimentoActionPerformed

    private void btnFiltrarAtendimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarAtendimentoActionPerformed
//        try {
//            atendimentosComFiltroLista = atendimentosSemFiltroLista;
//
//            String dataString = ftfDataAtendFiltro.getText();
//
//            if (!dataString.equals("  /  /    ")) {
//                String[] dataArray = dataString.split("/");
//                LocalDate dataAud = LocalDate.of(Integer.parseInt(dataArray[2]),
//                        Integer.parseInt(dataArray[1]),
//                        Integer.parseInt(dataArray[0]));
//                atendimentosComFiltroLista = atendimentosComFiltroLista.stream()
//                        .filter(registro -> registro.getAgenda().getData().equals(dataAud)).collect(Collectors.toList());
//            }
//
//            if (atendimentosComFiltroLista.isEmpty()) {
//                JOptionPane.showMessageDialog(null, "Nenhum registro encontrado!");
//            } else {
////                atualizarTabelaAtendimento(atendimentosComFiltroLista);
//            }
//        } catch (Exception e) {
//            log.error("Erro ao buscar na tabela de atendimentos: " + e.getMessage());
//            JOptionPane.showMessageDialog(null, "Erro ao buscar na tabela de atendimentos: " + e.getMessage());
//        }
    }//GEN-LAST:event_btnFiltrarAtendimentoActionPerformed

    private void btnLimparAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparAtendActionPerformed
        this.limparAtendimento();
    }//GEN-LAST:event_btnLimparAtendActionPerformed

    private void btnBuscarPetAtendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPetAtendActionPerformed
        DlgBuscaPet buscaPet = new DlgBuscaPet(null, true, sessionFactory);
        buscaPet.setVisible(true);

        pet = new PetDao(sessionFactory).buscar(buscaPet.id);
        if (pet.isPresent()) {
            txfPet.setText(pet.get().getNome());
        }
    }//GEN-LAST:event_btnBuscarPetAtendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgAtendimento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgAtendimento dialog = new DlgAtendimento(new javax.swing.JFrame(), true, 0, 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPetAtend;
    private javax.swing.JButton btnCriarAtendimento;
    private javax.swing.JButton btnEditarAtend;
    private javax.swing.JButton btnExcluirAtend;
    private javax.swing.JButton btnFiltrarAtendimento;
    private javax.swing.JButton btnLimparAtend;
    private javax.swing.JButton btnVerInfos;
    private javax.swing.JFormattedTextField ftfDataAtendCriar;
    private javax.swing.JFormattedTextField ftfDataAtendFiltro;
    private javax.swing.JFormattedTextField ftfHorarioAtend;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel pnlAtendimento;
    private javax.swing.JPanel pnlBuscaAtend;
    private javax.swing.JPanel pnlCadastroAtend;
    private javax.swing.JTable tblAtend;
    private javax.swing.JTextArea txaObserv;
    private javax.swing.JTextField txfPet;
    // End of variables declaration//GEN-END:variables
}
