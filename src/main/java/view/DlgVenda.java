/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import dao.ProdutoDao;
import dao.VendaDao;
import entities.Produto;
import entities.Venda;
import java.text.DecimalFormat;
import java.util.Optional;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.SessionFactory;
import utils.HibernateUtil;


/**
 *
 * @author evely
 */
public class DlgVenda extends javax.swing.JDialog {

    private final SessionFactory sessionFactory;
    private Produto produto = new Produto();
    String preco;
    
    public DlgVenda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
         this.sessionFactory = HibernateUtil.getSessionFactory();
    }
    
    String formapagamento = "";
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlvendas = new javax.swing.JPanel();
        chkCartao = new javax.swing.JCheckBox();
        chkDinheiro = new javax.swing.JCheckBox();
        lblPagar = new javax.swing.JLabel();
        btnfinalizar = new javax.swing.JButton();
        tfdnome = new javax.swing.JTextField();
        tfdCodigo = new javax.swing.JTextField();
        tfdPagar = new javax.swing.JTextField();
        tfdTotal = new javax.swing.JLabel();
        lblIdVenda = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaVenda = new javax.swing.JTable();
        btnadicionar = new javax.swing.JButton();
        btnbuscacodigo = new javax.swing.JButton();
        tfdProduto = new javax.swing.JTextField();
        tfdValorUnitario = new javax.swing.JTextField();
        tfdValorTotal = new javax.swing.JTextField();
        spnQuantidade = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        fundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlvendas.setBackground(new java.awt.Color(15, 112, 112));
        pnlvendas.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chkCartao.setBackground(new java.awt.Color(32, 32, 32));
        chkCartao.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        chkCartao.setText("    Cartão");
        chkCartao.setToolTipText("");
        chkCartao.setFocusPainted(false);
        chkCartao.setOpaque(false);
        chkCartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCartaoActionPerformed(evt);
            }
        });
        pnlvendas.add(chkCartao, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 150, -1, -1));

        chkDinheiro.setBackground(new java.awt.Color(255, 255, 255));
        chkDinheiro.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        chkDinheiro.setText("    Dinheiro");
        chkDinheiro.setToolTipText("");
        chkDinheiro.setFocusPainted(false);
        chkDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDinheiroActionPerformed(evt);
            }
        });
        pnlvendas.add(chkDinheiro, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 150, -1, -1));

        lblPagar.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblPagar.setText("Pagar:");
        pnlvendas.add(lblPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 300, -1, -1));

        btnfinalizar.setBackground(new java.awt.Color(2, 166, 166));
        btnfinalizar.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        btnfinalizar.setForeground(new java.awt.Color(255, 255, 255));
        btnfinalizar.setText("Finalizar venda");
        btnfinalizar.setBorder(null);
        btnfinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfinalizarActionPerformed(evt);
            }
        });
        pnlvendas.add(btnfinalizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 640, 300, 30));

        tfdnome.setEditable(false);
        tfdnome.setBackground(new java.awt.Color(230, 227, 227));
        tfdnome.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        tfdnome.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tfdnome.setBorder(null);
        pnlvendas.add(tfdnome, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 420, 250, 30));

        tfdCodigo.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        tfdCodigo.setToolTipText("");
        tfdCodigo.setBorder(null);
        pnlvendas.add(tfdCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 60, 30));

        tfdPagar.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        tfdPagar.setToolTipText("");
        tfdPagar.setBorder(null);
        pnlvendas.add(tfdPagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 290, 140, 40));

        tfdTotal.setFont(new java.awt.Font("Poppins", 0, 20)); // NOI18N
        tfdTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        pnlvendas.add(tfdTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 580, 120, 30));

        lblIdVenda.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        lblIdVenda.setForeground(new java.awt.Color(2, 166, 166));
        lblIdVenda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pnlvendas.add(lblIdVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 60, 90, 30));

        tabelaVenda.setFont(new java.awt.Font("Poppins", 0, 13)); // NOI18N
        tabelaVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Título", "Preço", "Quantidade", "Subtotal"
            }
        ));
        tabelaVenda.setGridColor(new java.awt.Color(204, 204, 204));
        tabelaVenda.setRowHeight(35);
        tabelaVenda.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tabelaVenda.setShowHorizontalLines(false);
        tabelaVenda.setShowVerticalLines(false);
        jScrollPane3.setViewportView(tabelaVenda);

        pnlvendas.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 810, 450));

        btnadicionar.setBackground(new java.awt.Color(255, 255, 255));
        btnadicionar.setBorder(null);
        btnadicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadicionarActionPerformed(evt);
            }
        });
        pnlvendas.add(btnadicionar, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 140, 80, 40));

        btnbuscacodigo.setBackground(new java.awt.Color(2, 166, 166));
        btnbuscacodigo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pesquisa.png"))); // NOI18N
        btnbuscacodigo.setBorder(null);
        btnbuscacodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscacodigoActionPerformed(evt);
            }
        });
        pnlvendas.add(btnbuscacodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(175, 79, 30, 30));

        tfdProduto.setEditable(false);
        tfdProduto.setBackground(new java.awt.Color(229, 233, 233));
        tfdProduto.setFont(new java.awt.Font("Poppins", 0, 15)); // NOI18N
        tfdProduto.setBorder(null);
        pnlvendas.add(tfdProduto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 380, 30));

        tfdValorUnitario.setBackground(new java.awt.Color(229, 233, 233));
        tfdValorUnitario.setToolTipText("");
        tfdValorUnitario.setBorder(null);
        pnlvendas.add(tfdValorUnitario, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 110, 30));

        tfdValorTotal.setBackground(new java.awt.Color(229, 233, 233));
        tfdValorTotal.setToolTipText("");
        tfdValorTotal.setBorder(null);
        pnlvendas.add(tfdValorTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, 110, 30));

        spnQuantidade.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        spnQuantidade.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        spnQuantidade.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        spnQuantidade.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnQuantidadeStateChanged(evt);
            }
        });
        pnlvendas.add(spnQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 110, 30));

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 15)); // NOI18N
        jLabel2.setText("R$");
        pnlvendas.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 155, -1, -1));

        jLabel1.setFont(new java.awt.Font("Poppins", 0, 15)); // NOI18N
        jLabel1.setText("R$");
        pnlvendas.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 155, -1, -1));

        fundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/menucomprass.png"))); // NOI18N
        pnlvendas.add(fundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1250, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlvendas, javax.swing.GroupLayout.PREFERRED_SIZE, 1250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlvendas, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkCartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCartaoActionPerformed
        chkDinheiro.setSelected(false);
        tfdPagar.setEditable(true);
        formapagamento = "Cartão";
    }//GEN-LAST:event_chkCartaoActionPerformed

    private void chkDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDinheiroActionPerformed
        if (chkDinheiro.isSelected()) {
            chkCartao.setSelected(false);
            tfdPagar.setEditable(true);
            formapagamento = "Dinheiro";
        }
    }//GEN-LAST:event_chkDinheiroActionPerformed

    private void btnfinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfinalizarActionPerformed
        int cont = tabelaVenda.getRowCount();
        System.out.println("contagem: "+ cont);

        if (cont <= 0) {
            JOptionPane.showMessageDialog(rootPane,
                "Você deve adicionar itens para venda!",
                "Atencão",
                JOptionPane.ERROR_MESSAGE);
        } else if (!chkDinheiro.isSelected() && !chkCartao.isSelected()) {
            JOptionPane.showMessageDialog(rootPane,
                "Você precisa selecionar uma forma de pagamento!",
                "Atencão",
                JOptionPane.ERROR_MESSAGE);
        } else if (tfdPagar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane,
                "Você precisa informar o valor a ser pago!",
                "Atencão",
                JOptionPane.ERROR_MESSAGE);
        } else { 
            Double valorPagar = Double.parseDouble(tfdPagar.getText().replaceAll(",", "."));
            Double totalc = Double.parseDouble(tfdTotal.getText().replaceAll(",", "."));
            if (valorPagar < totalc) {
                JOptionPane.showMessageDialog(rootPane,
                    "O valor a ser pago está incorreto!",
                    "Atencão",
                    JOptionPane.ERROR_MESSAGE);
            } else {
                
                Venda venda = new Venda();
                VendaDao dao = new VendaDao(sessionFactory);
                Double total = Double.valueOf(tfdTotal.getText().replaceAll(",", ".")).doubleValue();
                java.util.Date dataUtil = new java.util.Date();
                java.sql.Date dataSql = new java.sql.Date(dataUtil.getTime());

                int idVenda = Integer.parseInt(lblIdVenda.getText());

//                venda.setId(idVenda);
//                venda.setData_venda(dataSql);
//                venda.setFuncionario_id(id);
//                venda.setForma_pagamento(formapagamento);
//                venda.setValor_pagamento(total);
//                dao.salvar(venda);

                if (valorPagar > total) {
                    Double troco = valorPagar - total;
                    JOptionPane.showMessageDialog(rootPane,
                        "Venda concluída com sucesso!\n"
                        + "Troco: R$"+troco,
                        "Venda finalizada", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(rootPane,
                        "Venda concluída com sucesso!",
                        "Venda finalizada", JOptionPane.INFORMATION_MESSAGE);
                }
                DefaultTableModel tabela = (DefaultTableModel) tabelaVenda.getModel();
                tabela.setRowCount(0);
                tfdTotal.setText("");
                tfdnome.setText("");
                tfdPagar.setText("0");
                chkDinheiro.setSelected(false);
                chkCartao.setSelected(false);
            }
        }

    }//GEN-LAST:event_btnfinalizarActionPerformed

    private void btnadicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadicionarActionPerformed

//        int quantidade = (Integer) spnQuantidade.getValue();
//
//        if (tfdCodigo.getText().isEmpty() || tfdCodigo.getText().equals("0")) {
//            JOptionPane.showMessageDialog(rootPane,
//                "Você deve inserir o código do produto!",
//                "Atencão",
//                JOptionPane.ERROR_MESSAGE);
//
//        } else if (quantidade == 0) {
//            JOptionPane.showMessageDialog(rootPane,
//                "A quantidade de itens não pode ser zero!",
//                "Atencão",
//                JOptionPane.ERROR_MESSAGE);
//
//        } else {
//
//            //-----------------------------------------------------------------------------------//
//            int qtd;
//            int retirado;
//            int total;
//            int verificar;
//            ProdutoDao daoProduto = new ProdutoDao(sessionFactory);
//            Produto produto = new Produto();
//            produto = daoProduto.consultarId(Integer.parseInt(tfdCodigo.getText()));
//            verificar = produto.getQuantidade();
//
//            if (verificar < quantidade) {
//                JOptionPane.showMessageDialog(rootPane,
//                    "A quantidade não está disponível em estoque!",
//                    "Atencão",
//                    JOptionPane.ERROR_MESSAGE);
//
//            } else {
//
//                ItemVendaDao dao = new ItemVendaDao(sessionFactory);
//                ItemVenda item = new ItemVenda();
//                item.setIdProduto(Integer.parseInt(tfdCodigo.getText()));
//                item.setIdVenda(Integer.parseInt(lblIdVenda.getText()));
//                item.setNomeProduto(tfdProduto.getText());
//                item.setQuantidade(quantidade);
//                item.setSubtotal(Double.parseDouble(tfdValorTotal.getText().replaceAll(",", ".")));
//                item.setValor_item(Double.parseDouble(tfdValorUnitario.getText().replaceAll(",", ".")));
//                dao.salvar(item);
//
//                int ultimaVenda = atualizaIndiceVenda();
//                dao.popularTabela(tabelaVenda, ultimaVenda);
//
//                retirado = quantidade;
//                qtd = produto.getQuantidade();
//                total = qtd - retirado;
//                produto.setQuantidade(total);
//                daoProduto.atualizar(produto);
//                idproduto = Integer.parseInt(tfdCodigo.getText());
//
//                atualizaSubtotal();
//
//            }
//        }
//        tfdProduto.setText("");
//        tfdValorUnitario.setText("0");
//        tfdValorTotal.setText("0");
//        spnQuantidade.setValue(0);
//        tfdCodigo.setText("0");
    }//GEN-LAST:event_btnadicionarActionPerformed

    private void btnbuscacodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscacodigoActionPerformed
        int id = Integer.parseInt(tfdCodigo.getText());
        Optional <Produto> produto = new ProdutoDao(sessionFactory).buscar(id);
//        String venda = priceToString(produto.getValor_venda());
//        tfdValorUnitario.setText(venda);
//        tfdValorTotal.setText(venda);
//        preco = venda;
//        spnQuantidade.setValue(1);
//        tfdProduto.setText(produto.getTitulo());
    }//GEN-LAST:event_btnbuscacodigoActionPerformed

    private void spnQuantidadeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnQuantidadeStateChanged

        int qtd = (Integer) spnQuantidade.getValue();
        double venda = Double.parseDouble(preco.replaceAll(",", "."));
        double total = (qtd * venda);
        String total2 = priceToString(total);
        tfdValorTotal.setText(total2);

    }//GEN-LAST:event_spnQuantidadeStateChanged
        
      public static String priceWithDecimal(Double price) {
        DecimalFormat formatter = new DecimalFormat("###,###,###.00");
        return formatter.format(price);
    }

    public static String priceWithoutDecimal(Double price) {
        DecimalFormat formatter = new DecimalFormat("###,###,###.##");
        return formatter.format(price);
    }

    public static String priceToString(Double price) {
        String toShow = priceWithoutDecimal(price);
        if (toShow.indexOf(".") > 0) {
            return priceWithDecimal(price);
        } else {
            return priceWithoutDecimal(price);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadicionar;
    private javax.swing.JButton btnbuscacodigo;
    private javax.swing.JButton btnfinalizar;
    private javax.swing.JCheckBox chkCartao;
    private javax.swing.JCheckBox chkDinheiro;
    private javax.swing.JLabel fundo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblIdVenda;
    private javax.swing.JLabel lblPagar;
    private javax.swing.JPanel pnlvendas;
    private javax.swing.JSpinner spnQuantidade;
    private javax.swing.JTable tabelaVenda;
    private javax.swing.JTextField tfdCodigo;
    private javax.swing.JTextField tfdPagar;
    private javax.swing.JTextField tfdProduto;
    private javax.swing.JLabel tfdTotal;
    private javax.swing.JTextField tfdValorTotal;
    private javax.swing.JTextField tfdValorUnitario;
    private javax.swing.JTextField tfdnome;
    // End of variables declaration//GEN-END:variables
}
