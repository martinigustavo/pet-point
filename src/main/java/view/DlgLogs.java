/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.FuncionarioDao;
import dao.LogDao;
import entities.Funcionario;
import entities.Log;
import java.io.BufferedReader;
import java.io.FileReader;
import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import lombok.extern.log4j.Log4j2;
import org.hibernate.SessionFactory;
import utils.HibernateUtil;
import utils.VisualsConfig;

@Log4j2
public class DlgLogs extends javax.swing.JDialog {

    private Optional<Funcionario> funcionarioLog;
    private Optional<Funcionario> funcionarioAud;
    private final SessionFactory sessionFactory;
    private List<Log> auditoriaLista;
    private List<Log> logsLista;

    public DlgLogs(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        VisualsConfig.setPropsToWindow(this, "Logs da aplicação", parent);

        this.sessionFactory = HibernateUtil.getSessionFactory();

        this.logsLista = new ArrayList<>();
        this.auditoriaLista = new LogDao(sessionFactory).buscarTodos();

        this.atualizarTabela(auditoriaLista);

        this.carregarLog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlLogs = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaLogs = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnFiltrarLog = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        ftfDataIni = new javax.swing.JFormattedTextField();
        ftfDataFim = new javax.swing.JFormattedTextField();
        pnlAuditoria = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnFiltrarAud = new javax.swing.JButton();
        btnLimparAud = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txfID = new javax.swing.JTextField();
        btnBuscarFunc = new javax.swing.JButton();
        ftfDataAud = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        txfNome = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txfPermissao = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAuditoria = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        cbxComando = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbxTabela = new javax.swing.JComboBox<>();
        btnSair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txaLogs.setEditable(false);
        txaLogs.setColumns(20);
        txaLogs.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        txaLogs.setRows(5);
        jScrollPane1.setViewportView(txaLogs);

        jLabel1.setFont(new java.awt.Font("Poppins", 0, 20)); // NOI18N
        jLabel1.setText("FILTROS");

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel2.setText("Data Início:");

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel3.setText("Data Final:");

        jLabel4.setFont(new java.awt.Font("Poppins Medium", 0, 24)); // NOI18N
        jLabel4.setText("Logs do Sistema");

        btnFiltrarLog.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        btnFiltrarLog.setText("Filtrar");
        btnFiltrarLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarLogActionPerformed(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        try {
            ftfDataIni.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataIni.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N

        try {
            ftfDataFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataFim.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N

        javax.swing.GroupLayout pnlLogsLayout = new javax.swing.GroupLayout(pnlLogs);
        pnlLogs.setLayout(pnlLogsLayout);
        pnlLogsLayout.setHorizontalGroup(
            pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogsLayout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(ftfDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(111, 111, 111))
                    .addGroup(pnlLogsLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                                .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnFiltrarLog, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ftfDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(383, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(422, 422, 422))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLogsLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );
        pnlLogsLayout.setVerticalGroup(
            pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftfDataIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ftfDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 49, Short.MAX_VALUE)
                .addGroup(pnlLogsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFiltrarLog)
                    .addComponent(btnLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        jTabbedPane1.addTab("Logs", pnlLogs);

        jLabel8.setFont(new java.awt.Font("Poppins", 0, 20)); // NOI18N
        jLabel8.setText("FILTROS");

        jLabel9.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel9.setText("Data");

        jLabel11.setFont(new java.awt.Font("Poppins Medium", 0, 24)); // NOI18N
        jLabel11.setText("Auditoria");

        btnFiltrarAud.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        btnFiltrarAud.setText("Filtrar");
        btnFiltrarAud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltrarAudActionPerformed(evt);
            }
        });

        btnLimparAud.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        btnLimparAud.setText("Limpar");
        btnLimparAud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparAudActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel12.setText("ID:");

        txfID.setEditable(false);
        txfID.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        txfID.setBorder(null);

        btnBuscarFunc.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        btnBuscarFunc.setText("Buscar funcionário");
        btnBuscarFunc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarFuncActionPerformed(evt);
            }
        });

        try {
            ftfDataAud.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftfDataAud.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel13.setText("Nome:");

        txfNome.setEditable(false);
        txfNome.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        txfNome.setBorder(null);

        jLabel14.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel14.setText("Permissão:");

        txfPermissao.setEditable(false);
        txfPermissao.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        txfPermissao.setBorder(null);

        tblAuditoria.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        tblAuditoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cód.", "Comando", "Data", "Tabela", "Antes", "Depois", "Funcionário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblAuditoria);
        if (tblAuditoria.getColumnModel().getColumnCount() > 0) {
            tblAuditoria.getColumnModel().getColumn(0).setMinWidth(70);
            tblAuditoria.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblAuditoria.getColumnModel().getColumn(0).setMaxWidth(70);
        }

        jLabel5.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel5.setText("Comando");

        cbxComando.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        cbxComando.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "INSERT", "UPDATE", "DELETE" }));

        jLabel6.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        jLabel6.setText("Tabela");

        cbxTabela.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        cbxTabela.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todas", "Cliente", "Funcionário", "Produto", "Pet" }));

        javax.swing.GroupLayout pnlAuditoriaLayout = new javax.swing.GroupLayout(pnlAuditoria);
        pnlAuditoria.setLayout(pnlAuditoriaLayout);
        pnlAuditoriaLayout.setHorizontalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8)
                                .addGap(347, 347, 347))
                            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ftfDataAud)
                                            .addComponent(cbxComando, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cbxTabela, 0, 250, Short.MAX_VALUE))
                                        .addGap(79, 79, 79)
                                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                                                .addComponent(jLabel14)
                                                .addGap(18, 18, 18)
                                                .addComponent(txfPermissao, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
                                            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel13))
                                                .addGap(18, 18, 18)
                                                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txfID)
                                                    .addComponent(txfNome)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                                                .addComponent(btnLimparAud)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnFiltrarAud, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(btnBuscarFunc))))
                        .addGap(91, 91, 91))
                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                        .addContainerGap(96, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(474, 474, 474))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAuditoriaLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 951, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))))
        );
        pnlAuditoriaLayout.setVerticalGroup(
            pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addGap(5, 5, 5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ftfDataAud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addGroup(pnlAuditoriaLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(cbxComando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txfPermissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(cbxTabela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarFunc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(pnlAuditoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFiltrarAud)
                    .addComponent(btnLimparAud))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );

        jTabbedPane1.addTab("Auditoria", pnlAuditoria);

        btnSair.setFont(new java.awt.Font("Poppins Medium", 0, 16)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSair)
                .addGap(67, 67, 67))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSair)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnLimparAudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparAudActionPerformed
        ftfDataAud.setText("");
        cbxComando.setSelectedIndex(0);
        cbxTabela.setSelectedIndex(0);
        txfID.setText("");
        txfNome.setText("");
        txfPermissao.setText("");
        funcionarioAud = Optional.empty();

        this.atualizarTabela(auditoriaLista);
    }//GEN-LAST:event_btnLimparAudActionPerformed

    private void btnFiltrarAudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarAudActionPerformed
        try {
            logsLista = auditoriaLista;

            String dataAudString = ftfDataAud.getText();

            if (!dataAudString.equals("  /  /    ")) {
                String[] dataArray = dataAudString.split("/");
                LocalDate dataAud = LocalDate.of(Integer.parseInt(dataArray[2]),
                        Integer.parseInt(dataArray[1]),
                        Integer.parseInt(dataArray[0]));
                logsLista = logsLista.stream().filter(registro -> registro.getData().equals(dataAud)).collect(Collectors.toList());
            }

            if (cbxComando.getSelectedIndex() != 0) {
                switch (cbxComando.getSelectedIndex()) {
                    case 1:
                        logsLista = logsLista.stream().filter(
                                registro -> registro.getComando().contains("insert"))
                                .collect(Collectors.toList());
                        break;

                    case 2:
                        logsLista = logsLista.stream().filter(
                                registro -> registro.getComando().contains("update"))
                                .collect(Collectors.toList());
                        break;

                    case 3:
                        logsLista = logsLista.stream().filter(
                                registro -> registro.getComando().contains("delete"))
                                .collect(Collectors.toList());
                        break;

                    default:
                        break;
                }
            }

            if (cbxTabela.getSelectedIndex() != 0) {
                switch (cbxTabela.getSelectedIndex()) {
                    case 1:
                        logsLista = logsLista.stream().filter(
                                registro -> registro.getTabela().equals("cliente"))
                                .collect(Collectors.toList());
                        break;

                    case 2:
                        logsLista = logsLista.stream().filter(
                                registro -> registro.getTabela().equals("funcionario"))
                                .collect(Collectors.toList());
                        break;

                    case 3:
                        logsLista = logsLista.stream().filter(
                                registro -> registro.getTabela().equals("produto"))
                                .collect(Collectors.toList());
                        break;

                    case 4:
                        logsLista = logsLista.stream().filter(
                                registro -> registro.getTabela().equals("pet"))
                                .collect(Collectors.toList());
                        break;

                    default:
                        break;
                }
            }

            if (funcionarioAud.isPresent()) {
                logsLista = logsLista.stream().filter(
                        registro -> registro.getFuncionario().getId() == funcionarioAud.get().getId())
                        .collect(Collectors.toList());
            }

//            if (logsLista.isEmpty()) {
//                JOptionPane.showMessageDialog(null, "Nenhum registro encontrado!");
//            } else {
            atualizarTabela(logsLista);
//            }

        } catch (Exception e) {
            log.error("Erro ao buscar na tabela de auditoria: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Erro ao buscar na tabela de auditoria: " + e.getMessage());
        }
    }//GEN-LAST:event_btnFiltrarAudActionPerformed

    public void atualizarTabela(List<Log> lista) {
        try {
            Object[] cabecalho = {"id", "Comando", "Data", "Tabela", "Antes", "Depois", "Funcionário"};
            Object[][] dadosTabela = new Object[lista.size()][7];
            if (lista.size() > 0) {
                for (int i = 0; i < lista.size(); i++) {
                    dadosTabela[i][0] = lista.get(i).getId();
                    dadosTabela[i][1] = lista.get(i).getComando();
                    dadosTabela[i][2] = lista.get(i).getData();
                    dadosTabela[i][3] = lista.get(i).getTabela();
                    dadosTabela[i][4] = lista.get(i).getValores_antigos();
                    dadosTabela[i][5] = lista.get(i).getValores_novos();
                    dadosTabela[i][6] = lista.get(i).getFuncionario().getNome();
                }
            }

            tblAuditoria.setModel(new DefaultTableModel(dadosTabela, cabecalho) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }

            });

            tblAuditoria.setSelectionMode(0);

            // redimensiona as colunas de uma tabela
            TableColumn column = null;
            for (int i = 0; i < tblAuditoria.getColumnCount(); i++) {
                column = tblAuditoria.getColumnModel().getColumn(i);
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                column.setCellRenderer(centerRenderer);
            }

            column = tblAuditoria.getColumnModel().getColumn(0);
            column.setPreferredWidth(70);
            column.setMaxWidth(70);
            column.setMinWidth(70);
        } catch (Exception e) {
            log.error("Erro ao buscar na tabela de auditoria: " + e.getMessage());
            JOptionPane.showMessageDialog(null, "Erro ao buscar na tabela de auditoria: " + e.getMessage());
        }
    }

    private void btnBuscarFuncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarFuncActionPerformed
        DlgBuscaFuncionario buscaFuncionario = new DlgBuscaFuncionario(null, true, sessionFactory);
        buscaFuncionario.setVisible(true);

        funcionarioAud = new FuncionarioDao(sessionFactory).buscar(buscaFuncionario.id);
        if (funcionarioAud.isPresent()) {
            txfID.setText(String.valueOf(funcionarioAud.get().getId()));
            txfNome.setText(funcionarioAud.get().getNome());
            txfPermissao.setText(funcionarioAud.get().getPermissao().getDescricao());
        }
    }//GEN-LAST:event_btnBuscarFuncActionPerformed

    private void carregarLog() {
        try {
            BufferedReader in = new BufferedReader(new FileReader("logs/app.log"));
            String line = in.lines().collect(Collectors.joining(System.lineSeparator()));

            txaLogs.setText(line);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problema ao carregar informações do arquivo /log/app.log");
        }
    }
    
    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        ftfDataIni.setText("");
        ftfDataFim.setText("");

        this.carregarLog();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnFiltrarLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltrarLogActionPerformed
        try {
            String dataIniString = ftfDataIni.getText();
            String dataFimString = ftfDataFim.getText();
            boolean dataIniIsBlank = dataIniString.equals("  /  /    ");
            boolean dataFimIsBlank = dataFimString.equals("  /  /    ");

            boolean apenasDataInicial = !dataIniIsBlank && dataFimIsBlank;
            boolean apenasDataFinal = dataIniIsBlank && !dataFimIsBlank;
            boolean dataInicialEFinal = !dataIniIsBlank && !dataFimIsBlank;

            String linesToPrint = "";
            BufferedReader br = new BufferedReader(new FileReader("logs/app.log"));
            List<String> lines = br.lines().collect(Collectors.toList());

            if (dataIniIsBlank && dataFimIsBlank) {
                this.carregarLog();
                return;
            }

            for (String line : lines) {
                String[] infosDoErro = line.split(" ");
                LocalDate dataDoErro = LocalDate.parse(infosDoErro[0]);
                LocalDate dataIni = null;
                LocalDate dataFim = null;

                String[] dataIniSplit = dataIniString.split("/");
                String[] dataFimSplit = dataFimString.split("/");

                if (apenasDataInicial) {
                    dataIni = LocalDate.of(Integer.parseInt(dataIniSplit[2]),
                            Integer.parseInt(dataIniSplit[1]),
                            Integer.parseInt(dataIniSplit[0]));

                    if (dataDoErro.isAfter(dataIni)) {
                        linesToPrint += line + "\n";
                    }

                }

                if (apenasDataFinal) {
                    dataFim = LocalDate.of(Integer.parseInt(dataFimSplit[2]),
                            Integer.parseInt(dataFimSplit[1]),
                            Integer.parseInt(dataFimSplit[0]));

                    if (dataDoErro.isBefore(dataFim)) {
                        linesToPrint += line + "\n";
                    }
                }

                if (dataInicialEFinal) {
                    dataIni = LocalDate.of(Integer.parseInt(dataIniSplit[2]),
                            Integer.parseInt(dataIniSplit[1]),
                            Integer.parseInt(dataIniSplit[0]));
                    dataFim = LocalDate.of(Integer.parseInt(dataFimSplit[2]),
                            Integer.parseInt(dataFimSplit[1]),
                            Integer.parseInt(dataFimSplit[0]));

                    if (dataFim.isBefore(dataIni)) {
                        JOptionPane.showMessageDialog(null, "A data final deve ser posterior a data inicial.");
                        return;
                    }

                    if (dataDoErro.isAfter(dataIni) && dataDoErro.isBefore(dataFim)) {
                        linesToPrint += line + "\n";
                    }
                }
            }

            txaLogs.setText(linesToPrint);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Problema ao carregar informações do arquivo /log/app.log");
        }
    }//GEN-LAST:event_btnFiltrarLogActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgLogs.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgLogs.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgLogs.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgLogs.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgLogs dialog = new DlgLogs(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarFunc;
    private javax.swing.JButton btnFiltrarAud;
    private javax.swing.JButton btnFiltrarLog;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnLimparAud;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox<String> cbxComando;
    private javax.swing.JComboBox<String> cbxTabela;
    private javax.swing.JFormattedTextField ftfDataAud;
    private javax.swing.JFormattedTextField ftfDataFim;
    private javax.swing.JFormattedTextField ftfDataIni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlAuditoria;
    private javax.swing.JPanel pnlLogs;
    private javax.swing.JTable tblAuditoria;
    private javax.swing.JTextArea txaLogs;
    private javax.swing.JTextField txfID;
    private javax.swing.JTextField txfNome;
    private javax.swing.JTextField txfPermissao;
    // End of variables declaration//GEN-END:variables
}
